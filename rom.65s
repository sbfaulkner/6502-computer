;*******************************************************************************
; Addresses and constants
PORTB = $6000
PORTA = $6001
DDRB = $6002
DDRA = $6003

E  = %10000000
RW = %01000000
RS = %00100000

;*******************************************************************************
; ROM start
        .ORG $8000

START:
        LDX #$FF                ; Initialize stack pointer
        TXS

        LDA #%11111111          ; Set all eight pins of ORB to output
        STA DDRB

        LDA #%11100000          ; Set top three pins of ORA to output
        STA DDRA

        LDA #%00111000          ; Set 8-bit mode; 2-line display; 5x8 font
        JSR LCD_INSTRUCTION
        LDA #%00001110          ; Display on; cursor on; blink off
        JSR LCD_INSTRUCTION
        LDA #%00000110          ; Advancing cursor; no shifting
        JSR LCD_INSTRUCTION
        LDA #%00000001          ; Clear display
        JSR LCD_INSTRUCTION

        LDX #0
PRINT_MESSAGE:
        LDA MESSAGE,X           ; Send next character to DDRAM
        BEQ STOP
        JSR PRINT_CHARACTER
        INX
        JMP PRINT_MESSAGE

STOP:
        JMP STOP                ; Stop here

MESSAGE:
        .ASCIIZ "Hello, world!                           eater.net/6502"

LCD_WAIT:
        PHA
        LDA #%00000000          ; ORB is input
        STA DDRB
LCD_POLL:
        LDA #RW                 ; Set RW; Clear RS/E bits
        STA PORTA
        ORA #E                  ; Set E bit to send instruction
        STA PORTA
        LDA PORTB
        AND #%10000000          ; Check busy flag
        BNE LCD_POLL

        LDA #RW                 ; Clear E bit
        STA PORTA
        LDA #%11111111          ; ORB is output
        STA DDRB
        PLA
        RTS

LCD_INSTRUCTION:
        JSR LCD_WAIT
        STA PORTB
        LDA #0                  ; Clear RS/RW/E bits
        JSR LCD_SEND
        RTS

PRINT_CHARACTER:
        JSR LCD_WAIT
        STA PORTB
        LDA #RS                 ; Set RS; Clear RW/E bits
LCD_SEND:
        STA PORTA
        ORA #E                  ; Set E bit to send instruction
        STA PORTA
        EOR #E                  ; Clear E bit
        STA PORTA
        RTS

;*******************************************************************************
; Hardware vectors

        .ORG $FFFC
        .WORD START             ; RESET vector
        .WORD $0000
